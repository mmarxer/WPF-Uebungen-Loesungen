<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ModernUi">
    <!-- colors -->
    <Color x:Key="BaseColor">#1ba1e2</Color>
    
    <!-- solid color brush with base color -->
    <SolidColorBrush x:Key="BaseColorBrush" Color="{StaticResource BaseColor}" />
    
    <!-- window styles -->
    <Style x:Key="MainWindowStyle" TargetType="Window">
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="ResizeMode" Value="CanResizeWithGrip" />
        <Setter Property="AllowsTransparency" Value="True" />
        <!-- switch off ugly rounding errors on edge of window -->
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource BaseColorBrush}" />
        <Setter Property="MinHeight" Value="240" />
        <Setter Property="MinWidth" Value="320" />
        <Setter Property="Width" Value="525" />
        <Setter Property="Height" Value="350" />
        <Setter Property="Title" Value="Sample Modern UI Window"/>
    </Style>
    
    <!-- Title bar -->
    <Style x:Key="TitleContainerPanelStyle" TargetType="DockPanel">
        <Setter Property="Height" Value="96" />
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0, 0" EndPoint="0, 1" Opacity=".1">
                    <GradientStop Offset="0" Color="{StaticResource BaseColor}" />
                    <GradientStop Offset=".3" Color="{StaticResource BaseColor}" />
                    <GradientStop Offset="1" Color="Transparent" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TitlePanelStyle" TargetType="DockPanel">
        <Setter Property="Height" Value="32" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="DockPanel.Dock" Value="Top" />
    </Style>
    
    <!-- system buttons (base style) -->
    <Style x:Key="WindowSystemButtonStyle" TargetType="Button">
        <Setter Property="Width" Value="32"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="UseLayoutRounding" Value="True"></Setter>
        
        <!-- define template -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Width="32" VerticalAlignment="Stretch" Background="{TemplateBinding Background}">
                        <Grid Width="13" Height="12" RenderTransform="1,0,0,1,0,1">
                            <!-- present the content of the control, here -->
                            <ContentPresenter Content="{TemplateBinding Content}"></ContentPresenter>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource BaseColorBrush}"></Setter>
                <Setter Property="Foreground" Value="White"></Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="Silver"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    
    <!-- minimize button style -->
    <Style x:Key="MinimizeButtonStyle" TargetType="Button" BasedOn="{StaticResource WindowSystemButtonStyle}">
        <Setter Property="Content">
            <Setter.Value>
                <!-- set the content to a drawn icon (a small bar at the bottom of the button) -->
                <Path Data="M0,6 L8,6 Z" Width="8" Height="7" VerticalAlignment="Center" HorizontalAlignment="Center"
                    Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" StrokeThickness="2"  />
            </Setter.Value>
        </Setter>
    </Style>
    
    
    <!-- restore button style -->
    <Style x:Key="RestoreButtonStyle" TargetType="Button" BasedOn="{StaticResource WindowSystemButtonStyle}">
        <Setter Property="Content">
            <Setter.Value>
                <!-- set the content to a drawn icon (a stylized window) -->
                <Path Data="M2,0 L8,0 L8,6 M0,3 L6,3 M0,2 L6,2 L6,8 L0,8 Z" Width="8" Height="8" VerticalAlignment="Center" HorizontalAlignment="Center"
                    Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" StrokeThickness="1"  />
            </Setter.Value>
        </Setter>
    </Style>

    <!-- maximize button style -->
    <Style x:Key="MaximizeButtonStyle" TargetType="Button" BasedOn="{StaticResource WindowSystemButtonStyle}">
        <Setter Property="Content">
            <Setter.Value>
                <!-- set the content to a drawn icon (a window filling the full screen) -->
                <Path Data="M0,1 L9,1 L9,8 L0,8 Z" Width="9" Height="8" VerticalAlignment="Center" HorizontalAlignment="Center"
                        Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" StrokeThickness="2"  />
            </Setter.Value>
        </Setter>
    </Style>


    <!-- close button style -->
    <Style x:Key="CloseButtonStyle" TargetType="Button" BasedOn="{StaticResource WindowSystemButtonStyle}">
        <Setter Property="Content">
            <Setter.Value>
                <!-- set the content to a drawn icon (a window filling the full screen) -->
                <Path Data="M0,0 L8,7 M8,0 L0,7 Z" Width="8" Height="7" VerticalAlignment="Center" HorizontalAlignment="Center"
                        Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" StrokeThickness="1.5"  />
            </Setter.Value>
        </Setter>
    </Style>
    
    
    
    <!-- window title box style -->
    <Style x:Key="WindowTitleBoxStyle" TargetType="Label" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel DockPanel.Dock="Left" Orientation="Horizontal" 
                                HorizontalAlignment="Stretch" VerticalAlignment="Center"
                                Margin="4.0">
                        <!-- 
                            the following data binding expression to set the content of the label
                            gets the Title property of the first encountered ancestor of type Window
                            in the visual tree. We will learn more about Data Binding expressions
                            in the next week.
                        -->
                        <Label Name="WindowTitle" 
                            Content="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=Title}"></Label>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- window sub title box style -->
    <Style x:Key="WindowSubTitleStyle" TargetType="Label">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Label">
                    <DockPanel DockPanel.Dock="Top" Height="64" Name="SubTitlePanel" Margin="4">
                        <Label FontSize="24" Foreground="DarkGray">
                            <ContentPresenter></ContentPresenter>
                        </Label>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
    
    <!-- some button style -->
    <Style x:Key="MyButtonStyle" TargetType="Button">
        <Setter Property="Padding" Value="10 2"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="BorderBrush" Value="{StaticResource BaseColorBrush}" />
        <Setter Property="Foreground" Value="{StaticResource BaseColorBrush}" />
    </Style>
    
    <Style x:Key="QuitButtonStyle" TargetType="Button" BasedOn="{StaticResource MyButtonStyle}">
        <Setter Property="Margin" Value="0 0 20 20" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="HorizontalAlignment" Value="Right" />
    </Style>

    <Style x:Key="ViewPortStyle" TargetType="Viewport3D">
        <Setter Property="Camera">
            <Setter.Value>
                <PerspectiveCamera Position="-40,40,40" 
                                   LookDirection="40,-40,-40 " 
                                   UpDirection="0,0,1" />
            </Setter.Value>
        </Setter>
    </Style>

    <Model3DGroup x:Key="ModelCube">
        <DirectionalLight Color="White" Direction="-1,-1,-3" />
        <GeometryModel3D>
            <GeometryModel3D.Geometry>
                <MeshGeometry3D Positions="0,0,0 10,0,0 10,10,0 0,10,0 0,0,10 
                        10,0,10 10,10,10 0,10,10"
                                TriangleIndices="0 1 3 1 2 3  0 4 3 4 7 3  4 6 7 4 5 6 
                                         0 4 1 1 4 5  1 2 6 6 5 1  2 3 7 7 6 2"/>
            </GeometryModel3D.Geometry>
            <GeometryModel3D.Material>
                <DiffuseMaterial Brush="Red"/>
            </GeometryModel3D.Material>
        </GeometryModel3D>
    </Model3DGroup>

</ResourceDictionary>